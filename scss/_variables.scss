@use "sass:math";
@use 'sass:map';

$breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
);

$colors: (
  "white": white,
  "black": black,
  "grey": grey,
  "red": red,
  "blue": blue,
  "orange": orange,
  "orange-red": orangered,
  "green": green,
  "yellow": yellow
);

$displays: (
  none: none,
  inline: inline,
  block: block,
  inline-block: inline-block,
  flex: flex,
  inline-flex: inline-flex,
  grid: grid,
  inline-grid: inline-grid
);

$flex-directions: (
  row: row,
  row-reverse: row-reverse,
  col: column,
  col-reverse: column-reverse
);

$flex-wraps: (
  flex-wrap: wrap,
  flex-nowrap: nowrap,
  flex-wrap-reverse: wrap-reverse
);

$align-items: (
  ai-start: flex-start,
  ai-end: flex-end,
  ai-center: center,
  ai-baseline: baseline,
  ai-stretch: stretch
);

$justify-content: (
  jc-start: flex-start,
  jc-end: flex-end,
  jc-center: center,
  jc-between: space-between,
  jc-around: space-around,
  jc-evenly: space-evenly
);

$align-self: (
  as-auto: auto,
  as-start: flex-start,
  as-end: flex-end,
  as-center: center,
  as-baseline: baseline,
  as-stretch: stretch
);

$text-aligns: (
  text-left: left,
  text-right: right,
  text-center: center,
  text-justify: justify
);

$text-transforms: (
  text-uppercase: uppercase,
  text-lowercase: lowercase,
  text-capitalize: capitalize,
  text-normal: none
);

$text-decorations: (
  text-underline: underline,
  text-line-through: line-through,
  text-overline: overline,
  text-none: none
);


$size-utilities: (
  0: 0,
  5: 5%,
  10: 10%,
  15: 15%,
  20: 20%,
  25: 25%,
  30: 30%,
  35: 35%,
  33: 33.3333%,
  40: 40%,
  45: 45%,
  50: 50%,
  55: 55%,
  60: 60%,
  65: 65%,
  66: 66.6666%,
  70: 70%,
  75: 75%,
  80: 80%,
  85: 85%,
  90: 90%,
  95: 95%,
  100: 100%,
  auto: auto
);
// Étendre la map avec les valeurs en pixels de 0 à 1700 par bonds de 50
@for $i from 0 through 1700 {
  @if $i % 50 == 0 and $i != 0 {
    $size-utilities: map.merge($size-utilities, (
      #{$i}px: #{$i}px
    ));
  }
}

$spacers: (
  0: 0,
  1: 0.25rem,
  2: 0.5rem,
  3: 1rem,
  4: 1.5rem,
  5: 3rem,
  n0: -0,
  n1: -0.25rem,
  n2: -0.5rem,
  n3: -1rem,
  n4: -1.5rem,
  n5: -3rem
);

$font-sizes: (
  fs-1: 0.75rem,     // ~12px
  fs-2: 0.875rem,    // ~14px
  fs-3: 1rem,        // ~16px
  fs-4: 1.25rem,     // ~20px
  fs-5: 1.5rem,      // ~24px
  fs-6: 2rem,        // ~32px
  fs-7: 3rem,        // ~48px
  fs-8: 4rem         // ~64px
);

$font-weights: (
  fw-thin: 100,
  fw-light: 300,
  fw-normal: 400,
  fw-medium: 500,
  fw-semibold: 600,
  fw-bold: 700,
  fw-extrabold: 800,
  fw-black: 900
);

$font-styles: (
  fst-normal: normal,
  fst-italic: italic,
  fst-oblique: oblique
);

$line-heights: (
  lh-1: 1,
  lh-sm: 1.2,
  lh-normal: 1.5,
  lh-lg: 1.75,
  lh-xl: 2
);

// Letter Spacing
$letter-spacing: (
  tighter: -0.05em,
  tight: -0.025em,
  normal: 0,
  wide: 0.025em,
  wider: 0.05em,
  widest: 0.1em
);

// Définition des classes utilitaires pour le traitement d'image
$filters: (
  blur-0: blur(0),
  blur-1: blur(1px),
  blur-2: blur(2px),
  blur-3: blur(3px),
  blur-4: blur(4px),
  blur-5: blur(5px),
  brightness-50: brightness(0.5),
  brightness-75: brightness(0.75),
  brightness-100: brightness(1),
  brightness-125: brightness(1.25),
  brightness-150: brightness(1.5),
  contrast-50: contrast(0.5),
  contrast-75: contrast(0.75),
  contrast-100: contrast(1),
  contrast-125: contrast(1.25),
  contrast-150: contrast(1.5),
  grayscale-0: grayscale(0),
  grayscale-25: grayscale(0.25),
  grayscale-50: grayscale(0.5),
  grayscale-75: grayscale(0.75),
  grayscale-100: grayscale(1),
  hue-rotate-0: hue-rotate(0deg),
  hue-rotate-90: hue-rotate(90deg),
  hue-rotate-180: hue-rotate(180deg),
  hue-rotate-270: hue-rotate(270deg),
  invert-0: invert(0),
  invert-50: invert(0.5),
  invert-100: invert(1),
  opacity-0: opacity(0),
  opacity-25: opacity(0.25),
  opacity-50: opacity(0.5),
  opacity-75: opacity(0.75),
  opacity-100: opacity(1),
  saturate-0: saturate(0),
  saturate-50: saturate(0.5),
  saturate-100: saturate(1),
  saturate-150: saturate(1.5),
  saturate-200: saturate(2),
  sepia-0: sepia(0),
  sepia-25: sepia(0.25),
  sepia-50: sepia(0.5),
  sepia-75: sepia(0.75),
  sepia-100: sepia(1),
  drop-shadow-0: drop-shadow(0 0 0 transparent),
  drop-shadow-1: drop-shadow(1px 1px 2px rgba(0, 0, 0, 0.2)),
  drop-shadow-2: drop-shadow(2px 2px 4px rgba(0, 0, 0, 0.3)),
  drop-shadow-3: drop-shadow(3px 3px 6px rgba(0, 0, 0, 0.4)),
  drop-shadow-4: drop-shadow(4px 4px 8px rgba(0, 0, 0, 0.5))
);

$object-fits: (
  obj-contain: contain,
  obj-cover: cover,
  obj-fill: fill,
  obj-none: none,
  obj-scale-down: scale-down
);

$object-positions: (
  obj-top: top,
  obj-bottom: bottom,
  obj-left: left,
  obj-right: right,
  obj-center: center,
  obj-tl: top left,
  obj-tr: top right,
  obj-bl: bottom left,
  obj-br: bottom right
);

$image-renderings: (
  img-auto: auto,
  img-crisp: crisp-edges,
  img-pixel: pixelated
);
.img-fluid {
  max-width: 100%;
  height: auto;
  display: block;
}

$aspect-ratios: (
  ar-1-1: "1 / 1",
  ar-16-9: "16 / 9",
  ar-4-3: "4 / 3",
  ar-3-2: "3 / 2",
  ar-21-9: "21 / 9"
);

$bg-sizes: (
  bg-contain: contain,
  bg-cover: cover,
  bg-auto: auto
);

$bg-positions: (
  bg-center: center,
  bg-top: top,
  bg-bottom: bottom,
  bg-left: left,
  bg-right: right,
  bg-tl: top left,
  bg-tr: top right,
  bg-bl: bottom left,
  bg-br: bottom right
);

$mix-blend-modes: (
  blend-normal: normal,
  blend-multiply: multiply,
  blend-screen: screen,
  blend-overlay: overlay,
  blend-darken: darken,
  blend-lighten: lighten,
  blend-color-dodge: color-dodge,
  blend-color-burn: color-burn,
  blend-hard-light: hard-light,
  blend-soft-light: soft-light,
  blend-difference: difference,
  blend-exclusion: exclusion,
  blend-hue: hue,
  blend-saturation: saturation,
  blend-color: color,
  blend-luminosity: luminosity
);
$bg-blend-modes: $mix-blend-modes;

$cursors: (
  cursor-pointer: pointer,
  cursor-default: default,
  cursor-move: move,
  cursor-not-allowed: not-allowed,
  cursor-wait: wait,
  cursor-help: help
);

// Border styles (ajout de bordures supplémentaires)
$border-styles: (
  "solid": solid,
  "dashed": dashed,
  "dotted": dotted,
  "double": double,
  "none": none,
  "groove": groove,
  "ridge": ridge,
  "inset": inset,
  "outset": outset
);

// Border widths (ajout de tailles plus larges)
$border-widths: (
  0: 0,
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px,
  6: 6px,
  8: 8px,
  10: 10px,
  12: 12px,
  16: 16px
);

// Ajout des bordures couleur en utilisant les couleurs existantes
$border-colors: (
  "white": white,
  "black": black,
  "grey": grey,
  "red": red,
  "blue": blue,
  "orange": orange,
  "orange-red": orangered,
  "green": green,
  "yellow": yellow
);

// Si tu veux ajouter une couleur personnalisée, utilise map.merge
$border-colors: map.merge(
  $border-colors,
  (
    border-custom: #123456
  )
);


$radius: (
  rounded-0: 0,
  rounded: 0.25rem,
  rounded-sm: 0.125rem,
  rounded-md: 0.375rem,
  rounded-lg: 0.5rem,
  rounded-xl: 0.75rem,
  rounded-circle: 50%
);

$shadows: (
  shadow-none: none,
  shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05),
  shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 
  shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1),
  shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1),
  shadow-xl: 0 20px 25px rgba(0, 0, 0, 0.15),
  shadow-2xl: 0 25px 50px rgba(0, 0, 0, 0.25),
  inset: inset 0 0 1rem rgba(0, 0, 0, 0.1)
);

$text-shadows: (
  text-shadow-none: none,
  text-shadow-sm: 1px 1px 2px rgba(0, 0, 0, 0.2),
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3),
  text-shadow-md: 3px 3px 6px rgba(0, 0, 0, 0.4),
  text-shadow-lg: 4px 4px 8px rgba(0, 0, 0, 0.5)
);

// Opacity
$opacity-values: (
  0: 0,
  25: 0.25,
  50: 0.5,
  75: 0.75,
  100: 1
);

// Visibility
$visibility-values: visible, hidden;

// Z-Index
$z-index-values: (
  0: 0,
  1: 1,
  2: 2,
  3: 3,
  10: 10,
  20: 20,
  50: 50,
  99: 99,
  100: 100,
  999: 999,
  9999: 9999,
  infinite: 999999999999999
);

$coordpositions: (
  top,
  right,
  bottom,
  left
);

$position-values: (
  0: 0,
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px,
  6: 6px,
  7: 7px,
  8: 8px,
  9: 9px,
  10: 10px,
  5p: 5%,
  10p: 10%,
  15: 15%,
  20: 20%,
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%,
  auto: auto,
  n5: -5%,
  n10: -10%,
  n15: -15%,
  n20: -20%,
  n25: -25%,
  n30: -30%,
  n50: -50%,
  n100: -100%,
  1rem: 1rem,
  2rem: 2rem
);



.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -0.5rem;
  margin-right: -0.5rem;
}

// Nombre de colonnes (comme Bootstrap)
$grid-columns: 12;

// Colonne pleine largeur par défaut
.col {
  flex: 1;
  min-width: 0; /* for better overflow handling */
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.fcol {
  display: flex;
  flex-direction: column;
}
@each $break, $width in $breakpoints {
  @media (min-width: #{$width}) {
    .#{$break}-fcol {
      display: flex;
      flex-direction: column;
    }
  }
}

// Générer .col-1 à .col-12
@for $i from 1 through $grid-columns {
  .col-#{$i} {
    flex: 0 0 #{math.div($i, $grid-columns)};
    max-width: #{math.div($i, $grid-columns)};
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }

  // Responsive cols : sm-col-1, md-col-6, etc.
  @each $breakpoint, $width in $breakpoints {
    @media (min-width: #{$width}) {
      .#{$breakpoint}-col-#{$i} {
        flex: 0 0 #{math.div($i, $grid-columns)};
        max-width: #{math.div($i, $grid-columns)};
        padding-left: 0.5rem;
        padding-right: 0.5rem;
      }
    }
  }
}
